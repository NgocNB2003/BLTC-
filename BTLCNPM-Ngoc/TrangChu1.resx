<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hBtaeYkadCEySSaYSgk6P//Z
</value>
  </data>
</root>